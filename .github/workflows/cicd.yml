name: CI/CD

on:
  pull_request:
    branches: ['main']
  workflow_dispatch:

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Docker Compose
        run: |
          docker-compose up -d
        continue-on-error: true
        timeout-minutes: 5

      # - name: Wait for services to become healthy
      #   run: |
      #     retries=0
      #     until docker-compose ps | grep -q "Up.*\(db\|redis\).*healthy"; do
      #       retries=$((retries+1))
      #       if [ $retries -gt 30 ]; then
      #         echo "Services did not become healthy within timeout period."
      #         exit 1
      #       fi
      #       sleep 10
      #     done

      - name: Run tests
        run: docker-compose exec -T web ./run_test.sh

      - name: Stop Docker Compose
        run: docker-compose down

cd:
  name: CD
  runs-on: ubuntu-latest

  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to EC2
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ec2-user@ec2-18-166-61-81.ap-east-1.compute.amazonaws.com '
          cd ./dcard-golang-project
          docker-compose down
          git pull
          docker-compose up -d

          sleep 10

          DOCKER_COMPOSE_STATUS=$?

          if [ $DOCKER_COMPOSE_STATUS -eq 0 ]; then
              echo "Docker Compose started successfully."
          else
              echo "Docker Compose failed to start."
          fi
          exit $DOCKER_COMPOSE_STATUS
        '
